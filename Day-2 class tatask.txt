A)Difference between Node.JS and Javascript


1. NodeJS : 

NodeJS is a cross-platform and opensource Javascript runtime environment that allows the javascript to be run on the server-side. 
Nodejs allows Javascript code to run outside the browser. Nodejs comes with a lot of modules and mostly used in web development.

 2. JavaScript : 

Javascript is a Scripting language. It is mostly abbreviated as JS. It can be said that Javascript is the updated version of the ECMA script. 
Javascript is a high-level programming language that uses the concept of Oops but it is based on prototype inheritance. 


Difference between Nodejs and JavaScript :


S.No	       Javascript	                                 NodeJS

1.      Javascript is a programming            NodeJS is a Javascript runtime 
        language that is used for writing         environment.  
        scripts on the website.
 

2.      Javascript can only be                Javascript outside the browser with the help of NodeJS.         
        run in the browsers.
       

3.      It is basically used on                It is mostly used on the server-side.   
        the client-side.

                                             
4.      Javascript is capable enough to       Nodejs does not have capability to add HTML tags.
        add HTML and play with the DOM. 
        
5.      Javascript can run in any browser     V8 is the Javascript engine inside of node.js
         engine as like JS core in safari       that parses and runs Javascript.
        and Spidermonkey in Firefox.                                      
        
        

B)Ryan Seddon: So how does the browser actually render a website | JSConf EU 2015
   (i) summary 5 points:

  1)HTML Parsing?

Ans:Parsing means analyzing and converting a program into an internal format that a runtime environment can actually run, for example.
     the JavaScript engine inside browsers.

  2)Parse Tree?

Ans:A parse tree is a representation of the code closer to the concrete syntax. 
    It shows many details of the implementation of the parser. 
    For instance, usually a rule corresponds to the type of a node.

  3)DOM tree?

Ans:The Document Object Model is a cross-platform and language-independent interface. 
    that treats an XML or HTML document as a tree structure wherein each node is an object representing a part of the document. 
    The DOM represents a document with a logical tree. 

  4)Speculative parsing?

Ans:Traditionally in browsers the HTML parser ran on the main thread and was blocked after a </script> tag until the script has been retrieved from the network and executed. 
    Some HTML parser, such as Firefox since Firefox 4, support speculative parsing off of the main thread.

  5)Rendering?

Ans:Javascript uses the document object model (DOM) to manipulate the DOM elements. Rendering refers to showing the output in the browser.
    The DOM establishes parent-child relationships, and adjacent sibling relationships, among the various elements in the HTML file.




C)Execute the below code and write your description in txt file:
1.  typeof(1)

    console.log(typeof(1))

   output:
          number


2.  typeof(1.1)

    console.log(typeof(1))

   output:
          number


3.  typeof('1.1')

    console.log(typeof('1.1'))

   output:
          string


4.  typeof(true)

    console.log(typeof(true))

   output:
          boolean


5.  typeof(null)

    console.log(typeof(null))

   output:
          object


6.  typeof(undefined)

    console.log(typeof(undefined))

   output:
          undefined


7.  typeof([])

    console.log(typeof([]))

   output:
          object


8.  typeof({})

    console.log(typeof({}))

   output:
          object


9.  typeof(NaN)

    console.log(typeof(NaN))

   output:
          number         



D)What is use of prototype in JavaScript?

Ans:Prototypes allow you to easily define methods to all instances of a particular object.  
    The beauty is that the method is applied to the prototype, so it is only stored.  
    The memory once, but every instance of the object has access to it. 